import { EmploymentStatus } from '@close-front-office/mfe-broker/mfe-broker-portal/api';
import { Address } from '@close-front-office/mfe-broker/mfe-broker-panel/api';

export interface FeIncomeDetail {
  currentEmploymentStatus: EmploymentStatus;
  contractType?: string;
  contractStartDate?: string;
  jobTitle?: string;
  employerName?: string;
  canIncomeBeVerified?: boolean;
  contractEndDate?: string;
  isIncomeRecurrentSalaryOrDailyRate?: string;
  basicSalary?: number;
  salaryFrequency?: string;
  dailyRate?: number;
  dailyRateNumberOfDays?: number;
  gIOvertimeAmount?: number;
  gIOvertimeFrequency?: string;
  gIBonusAmount?: number;
  gIBonusFrequency?: string;
  gICommissionAmount?: number;
  gICommissionFrequency?: string;
  nogIOvertimeAmount?: number;
  nogIOvertimeFrequency?: string;
  nogIBonusAmount?: number;
  nogIBonusFrequency?: string;
  nogICommissionAmount?: number;
  nogICommissionFrequency?: string;
  locationAllowance?: number;
  locationAllowanceFrequency?: string;
  travelAllowance?: number;
  travelAllowanceFrequency?: string;
  shiftAllowance?: number;
  shiftAllowanceFrequency?: string;
  otherAllowance?: number;
  otherAllowanceFrequency?: string;
  last3MonthsIncome?: number;
  last6MonthsIncome?: number;
  last12MonthsIncome?: number;
  hourlyRate?: number;
  hoursPerWeek?: number;
  businessStartDate?: string;
  shareOfBusinessOwned?: number;
  companyType?: string;
  companyNumber?: string;
  annualDrawingsCurYear?: number;
  projectedNetProfitCurYear?: number;
  projectedGrossProfitCurYear?: number;
  yearEndingCurYearMonth?: number;
  yearEndingCurYearYear?: number;
  projectedDividendCurYear?: number;
  annualDrawings1Year?: number;
  projectedDividend1Year?: number;
  projectedNetProfit1Year?: number;
  projectedGrossProfit1Year?: number;
  annualDrawings2Year?: number;
  projectedNetProfit2Year?: number;
  projectedGrossProfit2Year?: number;
  projectedDividend2Year?: number;
  //FMA fields
  natureOfTheBusiness?: string;
  partnershipType?: string;
  isInProbatoryPeriod?: boolean;
  probatoryPeriod?: number;
  probatoryPeriodEndDate?: string;
  isPermanentAtEndOfProbatoryPeriod?: boolean;
  addressType?: string;
  address?: Address;
  contractTerm?: string;
  isContractLikelyToBeRenewed?: boolean;
  hasGapsBetweenContractsInLast12Months?: boolean;
  reasonForGapsBetweenContracts?: string;
  isApplicantProfessionalProvidingServices?: boolean;
  contractingTotalInMonths?: number;
  contractingTotalInYear?: number;
  accountantCompanyName?: string;
  accountantAddress?: string;
  accountantTelNo?: { [key: string]: number };
  accountantEmail?: string;
  accountantFirstName?: string;
  accountantLastName?: string;
  accountantQualification?: string;
  //income Type dropdown
  incomeType?: string;
  //Other income obj
  grossIncome?: number;
  descriptionNote?: string;
  salaryFrequencyOtherIncome?: string;
  incomeSource?: string;
}
